/**
 * BSD 3-Clause License
 *
 * Copyright Â© 2019, viadee Unternehmensberatung AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package scanhelper.controllers;

import org.springframework.web.bind.annotation.*;
import scanhelper.entities.UrlMapping;
import scanhelper.repositories.UrlMappingRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import scanhelper.services.SeleniumRequestHandler;

import java.util.Map;

/**
 * Controller for handling the requests that are sent by an external (scanner)
 * tool. Requests are "translated" into JavaScript actions that are executed
 * with Selenium.
 */
@RestController
@RequestMapping(value = "/scan")
public class ScanController {
	private static final Logger LOG = LoggerFactory.getLogger(ScanController.class);

	@Autowired
	private UrlMappingRepository urlMappingRepository;
	@Autowired
	private SeleniumRequestHandler seleniumRequestHandler;

    /**
     * Executes actions that are associated with the given form.
     *
     * @param parameters JSON String that contains the parameters which are inserted in the input fields.
     * @param formname   The name of the form that is scanned
     * @return ResponseEntity<String> HTTP OK if requests could be processed, HTTP NOT FOUND otherwise
     */
    @RequestMapping(value = "/{formname}*", method = RequestMethod.GET)
    public ResponseEntity<String> processRequest(@RequestParam Map<String, String> parameters, @PathVariable("formname") String formname) {
        UrlMapping urlParams = urlMappingRepository.findByName(formname);

        if (urlParams == null) {
            LOG.debug("Request to invalid form '" + formname + "' was received. Sending HTTP NOT FOUND response.");
            return new ResponseEntity<>("Form was not found.", HttpStatus.NOT_FOUND);
        }

		LOG.debug("Handle request regarding form '" + formname + "'.");

        // Send real requests to application.
        String pagecode = seleniumRequestHandler.sendRequests(urlParams, parameters);

        return new ResponseEntity<>(pagecode, seleniumRequestHandler.getStatusCode());
    }
}
